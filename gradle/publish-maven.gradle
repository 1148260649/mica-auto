apply plugin: 'signing'
apply plugin: 'maven-publish'

jar {
    afterEvaluate {
        manifest {
            attributes["Implementation-Title"] = project.name
            attributes["Implementation-Version"] = project.version
            attributes["Automatic-Module-Name"] = project.name.replace('-', '.')  // for Jigsaw
            attributes["Created-By"] = "${System.getProperty("java.version")} (${System.getProperty("java.specification.vendor")})"
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        failOnError false
        links "http://docs.oracle.com/javase/8/docs/api"
    }
}

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from 'build/docs/javadoc'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

tasks.whenTaskAdded { task ->
    if (task.name.contains('signMavenJavaPublication')) {
        task.enabled = new File(project.property('signing.secretKeyRingFile') as String).isFile()
    }
}

publishing {
    repositories {
        maven {
            url = version.endsWith('SNAPSHOT') ? REPOSITORY_URL_SNAPSHOT : REPOSITORY_URL_RELEASE
            credentials {
                username getRepositoryUsername()
                password getRepositoryPassword()
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'mica-auto'
                packaging = 'jar'
                description = 'An enhanced toolkit of Spring cloud to simplify development.'
                url = 'https://github.com/lets-mica/mica-auto'

                scm {
                    connection = 'scm:github.com/lets-mica/mica-auto.git'
                    developerConnection = 'scm:git@github.com/lets-mica/mica-auto.git'
                    url = 'https://github.com/lets-mica/mica-auto.git'
                }
                licenses {
                    license {
                        name = 'GNU LESSER GENERAL PUBLIC LICENSE'
                        url = 'https://www.gnu.org/licenses/lgpl-3.0.en.html'
                    }
                }
                developers {
                    developer {
                        name = 'Dreamlu'
                        email = 'qq596392912@gmail.com'
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_OSS_USER_NAME') ? NEXUS_OSS_USER_NAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_OSS_PASS_WORD') ? NEXUS_OSS_PASS_WORD : ""
}
